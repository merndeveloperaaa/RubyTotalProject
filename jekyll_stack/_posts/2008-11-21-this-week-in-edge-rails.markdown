---
layout: post
title: This Week in Edge Rails
categories:
- edge
author: Mike Gunderloy
published: true
date: 2008-11-21 15:19:00.000000000 +00:00
---
<p>First up this week, a warning for those who don&#8217;t closely follow the state of the <a href="http://github.com/rails/rails/tree/master">Rails repository</a> &#8211; &#8220;edge&#8221; really means edge now. The bits for 2.2 are getting locked down for release, and the repository has been forked; for the moment, edge Rails is being identified as <a href="http://github.com/rails/rails/commit/51a19ae2bf33e66b23ff5c91bf584b2efa9e669f">2.3</a> , though that projected version number might change later. If you&#8217;re trying to install almost-released 2.2 bits on your machine, make sure you&#8217;re using the 2-2-stable branch, and not edge, which is currently seeing some major changes.</p>
<p>The 2-2-stable code is still seeing changes, but they&#8217;re either bug fixes or very small things. This week, that includes fixing <a href="http://github.com/rails/rails/commit/d3fd9971093101712e4cc97ccc534631888b673d">a bug in assignment to has_one :through associations</a> , some further tuning of <a href="http://github.com/rails/rails/commit/8c197fb4ab4fa432a6e9421e0339a17a7ec296f1"><span class="caps">CSRF</span> protection</a> , a fix to handling of <a href="http://github.com/rails/rails/commit/337c361e26fe5647036f94556fe792535a921f93">checkboxes for Boolean attributes</a> , updating the bundled copies of TZInfo, Prototype, and script.aculo.us, and some Ruby 1.9 compatibility work (though currently full Ruby 1.9 compatibility is targeted for Rails 2.3).</p>
<p>The biggest feature change in the 2.2 branch is the addition of explicit I18n support to newly-generated Rails projects, including a sample locale file, auto-loading all locales in config/locales, and sample settings in config/environment.rb. <a href="http://github.com/rails/rails/commit/d9b92ee11b33fed5c7a94a91415fa846705f7dd3">commit</a></p>
<p>Also worth noting in 2.2 is a chunk of code removal: a whole mess of special case tests for the <span class="caps">SQL</span> Server adapter have been chopped out of the Active Record test cases. That&#8217;s because Ken Collins has done tremendous work in making the <a href="http://github.com/rails-sqlserver/2000-2005-adapter/tree/master"><span class="caps">SQL</span> Server adapter</a> work the way that Rails expects data adapters to work, giving us a big step in the area of backend portability. <a href="http://github.com/rails/rails/commit/8e4624be9e55cd0865b307be70a1e6287ec033ca">commit</a></p>
<p>On the actual edge code (the master branch in the repository), there&#8217;s a lot more action. With that branch just opened, some pent-up code has been checked in, and some big changes are being made. It&#8217;s an exciting time, and edge is definitely worth checking out. Here are some of the most notable changes in the past week.</p>
<p>One big set of changes has come from Jeremy Kemper, who has been overhauling the internal Rails testing to switch from <code>Test::Unit::TestCase</code> to <code>ActiveSupport::TestCase</code>. This work also includes requiring Mocha to test Rails (in the 2.2 code, some tests are skipped if you don&#8217;t have Mocha installed) and generally making the Rails testing strategy (both within core and for generated applications) more consistent moving forward.</p>
<p>If you&#8217;re one of the people who has always been bothered by the special-case naming of application.rb, rejoice! It&#8217;s been reworked to be application_controller.rb in the edge code. More info <a href="http://afreshcup.com/2008/11/17/rails-2x-the-death-of-applicationrb/">here</a> and <a href="http://ryandaigle.com/articles/2008/11/19/what-s-new-in-edge-rails-application-rb-duality-is-no-more">here</a> . <a href="http://github.com/rails/rails/commit/fcce1f17eaf9993b0210fe8e2a8117b61a1f0f69">commit</a></p>
<p>Rails 2.3 will introduce the notion of <a href="http://ryandaigle.com/articles/2008/11/18/what-s-new-in-edge-rails-default-scoping">default scopes</a> : similar to named scopes, but applying to all named scopes or find methods within the class. For example, you can write <code>default_scope :order =&gt; 'name ASC'</code> and any time you retrieve records from that class they&#8217;ll come out sorted by name (unless you override the option, of course). <a href="http://github.com/rails/rails/commit/2530d0eea8eaecd2c61f99225f050ff47973e9a0">commit</a></p>
<p>A lot of folks have adopted the notion of using try() to attempt operations on objects &#8211; Here&#8217;s Chris Wanstrath&#8217;s <a href="http://ozmm.org/posts/try.html">blog post</a> introducing it. It&#8217;s especially helpful in views where you can avoid nil-checking by writing code like <code>&lt;%= @person.try(:name) %&gt;</code>. Well, now it&#8217;s baked right into Rails. <a href="http://github.com/rails/rails/commit/51730792ca930a896361eb92354a42bc56903de1">commit</a></p>
<p>Also new on the syntactic sugar front is <code>Enumerable#none?</code> to check that none of the elements match the supplied block. <a href="http://github.com/rails/rails/commit/f451f0e5cfa358e88ac9d03d813a9c84facd6648">commit</a></p>
<p>The render method has been getting smarter over the years, and it&#8217;s going to be even smarter in 2.3. If you have an object or a collection and the naming matches up, you can now just do <code>&lt;% render @article %&gt;</code> or <code>&lt;% render @articles %&gt;</code> and things will just work. Ryan Daigle has some more <a href="http://ryandaigle.com/articles/2008/11/20/what-s-new-in-edge-rails-render-stops-being-high-maintenance">examples</a> on this. <a href="http://github.com/rails/rails/commit/e442448fa3f706062ef9c89912c1fd95e1119f67">commit</a></p>
<p>On a somewhat similar note, render_component goes from &#8220;deprecated&#8221; to &#8220;nonexistent&#8221; in 2.3. If you still need it, you can install the <a href="http://github.com/rails/render_component/tree/master">plugin</a> . <a href="http://github.com/rails/rails/commit/27c03e69e94655482b0d77d3ae0ca902ce537f8c">commit</a></p>
<p>The <code>autolink</code> helper has been refactored to make it a bit less messy and more intuitive. <a href="http://github.com/rails/rails/commit/c6c5cd554110f6e62290de3e3008076b2f69e7cb">commit</a> <a href="http://github.com/rails/rails/commit/4f984c9d0e66601a81cb5ae6e3b50582e6dc0c2d">commit</a></p>
<p>There&#8217;s a fix to a memory leak connected to thread safety and asset tags, that could bite sites that were referencing a lot of external images. Aaron Batalion contributed the fix, as well as a <a href="http://blog.hungrymachine.com/2008/11/19/are-your-mongrels-growing-to-600mb-blame-assettag">blog post</a> explaining the issue. <a href="http://github.com/rails/rails/commit/e54c33bfc8eab7ac482d571ab6bb0285b40fa56b">commit</a> and <a href="http://github.com/rails/rails/commit/d7f4921a9a852da7c1075275eaf73822edb7acff">commit</a></p>
<p>Finally, it&#8217;s worth mentioning that some controversy has erupted over a change made to the 2.2 code <a href="http://github.com/rails/rails/commit/22af62cf486721ee2e45bb720c42ac2f4121faf4">five months ago</a> &#8211; the addition of <code>Array#second</code> through <code>Array#tenth</code> as aliases for <code>Array#[1]</code> through <code>Array#[9]</code>. Without taking a stand on the controversy (I&#8217;ve done that <a href="http://afreshcup.com/2008/11/20/a-modest-proposal/">elsewhere</a>), I&#8217;ll just note that the most recent edge checkin as I write this trims this down to only support <code>Array#second</code> through <code>Array#fifth</code> &#8211; and uses the savings in overhead to implement <code>Array#forty-two</code>. <a href="http://github.com/rails/rails/commit/e50530ca3ab5db53ebc74314c54b62b91b932389">commit</a></p>