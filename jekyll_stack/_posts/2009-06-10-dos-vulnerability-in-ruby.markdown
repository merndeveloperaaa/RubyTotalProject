---
layout: post
title: DoS Vulnerability in Ruby
categories: []
author: michael
published: true
date: 2009-06-10 00:01:00.000000000 +01:00
---
<p>A Denial of Service vulnerability has been found and fixed in ruby.  The vulnerability is due to the BigDecimal method mishandling certain large input values and can cause the interpreter to crash.  This could be used by an attacker to crash any ruby program which creates BigDecimal objects based on user input, including almost every Rails application. This vulnerability has been assigned the <span class="caps">CVE</span> name <span class="caps">CVE</span>-2009-1904.</p>
<p>For upgrade instructions and information on affected ruby versions please see the <a href="http://www.ruby-lang.org/en/news/2009/06/09/dos-vulnerability-in-bigdecimal/">ruby security team&#8217;s announcement</a>.</p>
<p>All users are advised to upgrade their ruby installations immediately to avoid this problem.  In the event that you are unable to upgrade your ruby installation, or are using an out-of-maintenance ruby version, there is a <a href="http://github.com/NZKoz/bigdecimal-segfault-fix/tree/master">workaround available on github</a>.  You can either install it as a gem, or simply copy the file <a href="http://github.com/NZKoz/bigdecimal-segfault-fix/blob/0aaf499f7b3df630da2e5780512975751d3473fd/lib/bigdecimal-segfault-fix.rb">bigdecimal-segfault-fix.rb</a>  into <ins>config/initializers</ins> of your rails application.</p>
<p><span class="caps">NOTE</span>: this workaround breaks valid formats supported by BigDecimal, users should not rely on this fix for an extended period of time but should instead immediately begin planning a migration to a supported ruby release.</p>
<p>The upcoming Rails 2.3.3 release will include some minor mitigating changes to reduce some potential attack vectors for this vulnerability.  However these mitigations will not close every potential method of attack and users should still upgrade their ruby installation as soon as possible.</p>
<p>Thanks to Jose Fern√°ndez for reporting the vulnerability to the rails security team, and to the ruby security team for confirming the nature of the bug and handling the release process.</p>