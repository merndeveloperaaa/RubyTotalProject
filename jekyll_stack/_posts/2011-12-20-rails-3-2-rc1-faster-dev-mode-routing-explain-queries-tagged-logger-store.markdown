---
layout: post
title: ! 'Rails 3.2 RC1: Faster dev mode & routing, explain queries, tagged logger,
  store'
categories:
- releases
author: David
published: true
date: 2011-12-20 00:46:00.000000000 +00:00
---
<p>Once you&#8217;ve boarded the Rails train, you just know that every stop along the way is going to be a good time. This release candidate is no different and we&#8217;ve packed it with loving goodies without making upgrading a hassle.</p>
<p><strong>Faster dev mode &amp; routing</strong></p>
<p>The most noticeable new feature is that development mode got a ton and a half faster. Inspired by <a href="https://github.com/paneq/active_reload">Active Reload</a>, we now only reload classes from files you&#8217;ve actually changed. The difference is dramatic on a larger application.</p>
<p>Route recognition also got a bunch faster thanks to the <a href="https://github.com/rails/journey">new Journey engine</a> and we made linking much faster as well (especially apparent when you&#8217;re having 100+ links on a single page).</p>
<p><strong>Explain queries</strong></p>
<p>We&#8217;ve added a <a href="https://rubyonrails.org/2011/12/6/what-s-new-in-edge-rails-explain">quick and easy way to explain quieries generated by ARel</a>. In the console, you can run something like <code>puts Person.active.limit(5).explain</code> and you&#8217;ll get the query ARel produces explained (so you can easily see whether its using the right indexes). There&#8217;s even a default threshold in development mode where if a query takes more than half a second to run, it&#8217;s automatically explained inline &#8212; how about that!</p>
<p><strong>Tagged logger</strong></p>
<p>When you&#8217;re running a multi-user, multi-account application, it&#8217;s a great help to be able to filter the log by who did what. Enter the TaggedLogging wrapper. It works like this:</p>
Logger = ActiveSupport::TaggedLogging.new(Logger.new(<span class="caps">STDOUT</span>))
Logger.tagged(&#8220;<span class="caps">BCX</span>&#8221;) { Logger.info &#8220;Stuff&#8221; } # Logs &#8220;[<span class="caps">BCX</span>] Stuff&#8221;
Logger.tagged(&#8220;<span class="caps">BCX</span>&#8221;) do
Logger.tagged(&#8220;Jason&#8221;) do
Logger.info &#8220;Stuff&#8221; # Logs &#8220;\[<span class="caps">BCX</span>\] \[Jason\] Stuff&#8221;
end
end
<p><strong>Active Record Store</strong></p>
<p>Key/value stores are great, but it&#8217;s not always you want to go the whole honking way just for a little variable-key action. Enter the Active Record Store:</p>
class User &lt; ActiveRecord::Base
store :settings, accessors: [ :color, :homepage ]
end

u = User.new(color: &#8216;black&#8217;, homepage: &#8216;37signals.com&#8217;)
u.color                          # Accessor stored attribute
u.settings[:country] = &#8216;Denmark&#8217; # Any attribute, even if not specified with an accessor
<p>These are just a few of the highlights. The <a href="https://gist.github.com/1472145">full release notes</a> detail every loving change.</p>
<p>Given that this is a release candidate, we&#8217;re ever so eager to hear your feedback. We hope it&#8217;ll be a quick RC phase, but please do spoil that plan by <a href="https://github.com/rails/rails/issues">reporting bugs</a>.</p>
<p>As always, you install a release candidate by doing <code>gem install rails --pre</code>.</p>